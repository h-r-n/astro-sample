---
import { Image } from "astro:assets";
import { BiRevision, BiSolidCategory, BiSolidPurchaseTag, BiInfoCircle } from "react-icons/bi";
import { dateFormat, dateBlogFormat } from "@/lib/utils/dateFormat";
import { humanize, markdownify, slugify } from "@/lib/utils/textConverter";
import type { PostData } from "@/types";
import AroundPost from "./components/AroundPost.astro";
import RelatedPosts from "./components/RelatedPosts.astro";
import Toc from "./components/Toc.astro";
import Spacer from "./components/Spacer.astro";
import LinkCard from "./components/LinkCard.astro";

const { post } = Astro.props;
const { Content, remarkPluginFrontmatter } = await post.render();
const { title, categories, image, date, tags }: PostData = post.data;
const blogDate = dateBlogFormat(date);
const minutesRead = Math.ceil(remarkPluginFrontmatter.minutesRead)
---

<section class="section">
  <div class="container">
    <div>
      <div class="p-2.5 lg:p-8 shadow sm:p-[60px] bg-white">
        <article>
          <div class="flex items-center flex-row-reverse mb-2.5">
            <h1 set:html={markdownify(title)} class="w-full leading-[1.4rem] text-lg sm:text-2xl" />
            <time class="pr-2 py-1.5 mr-2 sm:pr-3 sm:py-2 sm:mr-3 text-center border-r-[1px] border-solid leading-none font-normal" datetime={dateFormat(date, "yyyy-MM-dd")} aria-hidden="true">
              <span class="block mb-1 text-xs-fit sm:text-sm-fit">{blogDate.year}</span>
              <span class="block text-sm-fit sm:text-2xl-fit">{blogDate.date}</span>
            </time>
          </div>
          <div class="mb-8 items-center flex flex-wrap text-xs gap-x-2.5 gap-y-1">
            <div class="items-center border border-solid inline-flex text-sm gap-x-1 px-1.5 py-0.5">
              <BiInfoCircle />
              <span>広告</span>
            </div>
            <div class="items-center text-sm flex flex-wrap gap-x-2">
              <BiSolidCategory className="text-primary"/>
              {categories.map((category: string, i: number) => (
                <a
                  href={`/categories/${slugify(category)}`}
                  class="bg-primary text-white leaping-none p-1 text-xs-fit tag-transition"
                >
                  {humanize(category)}
                </a>
              ))}
            </div>
            <time datetime={dateFormat(date, "yyyy-MM-dd")} class="items-center text-sm flex flex-wrap gap-x-1">
              <BiRevision />
              <span class="text-xs">{dateFormat(date)}</>
            </time>
          </div>
          {
            image && (
              <Image
                src={image}
                height={500}
                width={1000}
                alt={title}
                class="mb-4"
              />
            )
          }
          <div class="items-center sm:text-xs text-[11px] underline mb-8 text-right">
            この記事は<span class="sm:text-sm text-xs text-primary font-bold">約{minutesRead}分</span>で読めます
          </div>
          <div class="content mb-16 text-left">
            <Content components={{
              Toc,
              LinkCard,
              Spacer,
            }} />
            <!-- <Markdown content={post.body} components={shortcodes} /> -->
          </div>
          <!-- カテゴリとタグの下部表示 -->
          <div class="mb-8 items-center flex flex-wrap text-xs gap-x-2.5 gap-y-1">
            <div class="items-center text-sm flex flex-wrap gap-x-2">
              {categories.length > 0 && <BiSolidCategory className="text-primary"/>}
              {categories.map((category: string, i: number) => (
                <a
                  href={`/categories/${slugify(category)}`}
                  class="bg-primary text-white leaping-none p-1 text-xs-fit tag-transition"
                >
                  {humanize(category)}
                </a>
              ))}
            </div>
            <div class="items-center text-sm flex flex-wrap gap-x-2">
              {tags.length > 0 && <BiSolidPurchaseTag className="text-primary"/>}
              {tags.map((tag: string, i: number) => (
                <a
                  href={`/tags/${slugify(tag)}`}
                  class="bg-white text-primary border-primary p-1 border text-xs-fit tag-transition"
                >
                  # {humanize(tag)}
                </a>
              ))}
            </div>
          </div>
          <AroundPost post={post} />
          <!-- 関連する記事 -->
          <RelatedPosts post={post} />
        </article>
      </div>
    </div>
  </div>
</section>
